{"mappings":"YAgCA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAS,CAAET,WAAUC,SAEvBK,EACFH,EAAQM,GAERL,EAAOK,E,GAERR,E,IA3CPS,SAASC,cAAc,SAASC,iBAAiB,UAEjD,SAAsBC,GACpBA,EAAMC,iBAGN,IAAMC,EAAaL,SAASC,cAAc,uBACpCK,EAAYN,SAASC,cAAc,sBACnCM,EAAcP,SAASC,cAAc,wBAErCO,EAAaC,SAASJ,EAAWK,OACjCC,EAAOF,SAASH,EAAUI,QAMlC,SAA0BE,EAAQJ,EAAYG,GAE5C,IAAK,IAAIE,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/BxB,EAAcwB,EAAI,EADJL,EAAaK,EAAIF,GAEhCG,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MACjByB,QAAQC,IAAI,uBAAwCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,IAE3D4B,OAAM,SAAAJ,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAClByB,QAAQC,IAAI,sBAAqCC,OAAf5B,EAAS,QAAY4B,OAAN3B,EAAM,M,KAZzD6B,CAFeX,SAASF,EAAYG,OAEXF,EAAYG,E","sources":["src/js/03-promises.js"],"sourcesContent":["document.querySelector(\".form\").addEventListener(\"submit\", handleSubmit);\n\nfunction handleSubmit(event) {\n  event.preventDefault();\n\n  \n  const delayInput = document.querySelector(\"input[name='delay']\");\n  const stepInput = document.querySelector(\"input[name='step']\");\n  const amountInput = document.querySelector(\"input[name='amount']\");\n\n  const firstDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n\n  generatePromises(amount, firstDelay, step);\n}\n\nfunction generatePromises(amount, firstDelay, step) {\n\n  for (let i = 0; i < amount; i++) {\n    const delay = firstDelay + i * step;\n    createPromise(i + 1, delay)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  \n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      const result = { position, delay };\n\n      if (shouldResolve) {\n        resolve(result);\n      } else {\n        reject(result);\n      }\n    }, delay);\n  });\n}\n\n\nfunction resetForm(...inputs) {\n  inputs.forEach((input) => {\n    input.value = \"\";\n  });\n}\n"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","shouldResolve","Math","random","result","document","querySelector","addEventListener","event","preventDefault","delayInput","stepInput","amountInput","firstDelay","parseInt","value","step","amount","i","then","param","console","log","concat","catch","$ce04d3a99e08e73b$var$generatePromises"],"version":3,"file":"03-promises.536760f6.js.map"}